# For testing purposes only
# Can be used with either enrich-pubsub or enrich-kinesis

{
  "input": {
    "type": "FileSystem"

    # Directory containing collector payloads that are Thrift encoded
    "dir": "/var/collector-payloads"
  }

  "output": {
    # Enriched events output
    "good": {
      "type": "FileSystem"
      "file": "/var/enriched"
      "maxBytes": 1000000
    }

    # Pii events output
    "pii": {
      "type": "FileSystem"
      "file": "/var/pii"
      "maxBytes": 1000000
    }

    # Bad rows output
    "bad": {
      # Local FS supported for testing purposes
      "type": "FileSystem"
      "file": "/var/bad"
      "maxBytes": 1000000
    }
  }

  # Optional. Concurrency of the app
  "concurrency" : {
    # Number of events that can get enriched at the same time within a chunk
    "enrich": 256
    # Number of chunks that can get sunk at the same time
    "sink": 3
  }

  # Optional. period after which enrich assets should be checked for updates
  # no assets will be updated if the key is absent
  "assetsUpdatePeriod": "7 days"

  "monitoring": {

    # Optional, for tracking runtime exceptions
    "sentry": {
      "dsn": "http://sentry.acme.com"
    }

    # Optional, configure how metrics are reported
    "metrics": {

      # Optional. Send metrics to a StatsD server
      "statsd": {
        "hostname": "localhost"
        "port": 8125

        # Required, how frequently to report metrics
        "period": "10 seconds"

        # Any key-value pairs to be tagged on every StatsD metric
        "tags": {
          "app": enrich
        }

        # Optional, override the default metric prefix
        # "prefix": "snowplow.enrich."
      }

      # Optional. Log to stdout using Slf4j
      "stdout": {
        "period": "10 seconds"

        # Optional, override the default metric prefix
        # "prefix": "snowplow.enrich."
      }

      # Optional. Cloudwatch metrics for KPL
      "cloudwatch": true
    }
  }

  # Optional, configure telemetry
  # All the fields are optional
  "telemetry": {

    # Set to true to disable telemetry
    "disable": false

    # Interval for the heartbeat event
    "interval": 15 minutes

    # HTTP method used to send the heartbeat event
    "method": POST

    # URI of the collector receiving the heartbeat event
    "collectorUri": collector-g.snowplowanalytics.com

    # Port of the collector receiving the heartbeat event
    "collectorPort": 443

    # Whether to use https or not
    "secure": true

    # Identifier intended to tie events together across modules,
    # infrastructure and apps when used consistently
    "userProvidedId": my_pipeline

    # ID automatically generated upon running a modules deployment script
    # Intended to identify each independent module, and the infrastructure it controls
    "autoGeneratedId": hfy67e5ydhtrd

    # Unique identifier for the VM instance
    # Unique for each instance of the app running within a module
    instanceId = 665bhft5u6udjf

    # Name of the terraform module that deployed the app
    moduleName = enrich-kinesis-ce

    # Version of the terraform module that deployed the app
    moduleVersion = 1.0.0
  }

  # Optional. To activate/deactive enrich features that are still in beta
  # or that are here for transition.
  # This section might change in future versions
  "featureFlags" : {

    # Enrich 3.0.0 introduces the validation of the enriched events against atomic schema
    # before emitting.
    # If set to false, a bad row will be emitted instead of the enriched event
    # if validation fails.
    # If set to true, invalid enriched events will be emitted, as before.
    # WARNING: this feature flag will be removed in a future version
    # and it will become impossible to emit invalid enriched events.
    # More details: https://github.com/snowplow/enrich/issues/517#issuecomment-1033910690
    "acceptInvalid": false
  }
}
