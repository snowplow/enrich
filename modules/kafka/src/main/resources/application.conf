{
  "input": {
    "type": "Kafka"
    "consumerConf": {
      "enable.auto.commit": "false"
      "auto.offset.reset" : "earliest"
      "group.id": "enrich"
      "security.protocol": "SASL_SSL"
      "sasl.mechanism": "OAUTHBEARER"
      "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
    }
  }

  "output": {
    "good": {
      "type": "Kafka"
      "producerConf": {
        "acks": "all"
        "security.protocol": "SASL_SSL"
        "sasl.mechanism": "OAUTHBEARER"
        "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      }
      "partitionKey": ""
      "headers": []
    }

    "pii": {
      "type": "Kafka"
      "topicName": ""
      "bootstrapServers": ""
      "producerConf": {
        "acks": "all"
        "security.protocol": "SASL_SSL"
        "sasl.mechanism": "OAUTHBEARER"
        "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      }
      "partitionKey": ""
      "headers": []
    }

    "bad": {
      "type": "Kafka"
      "producerConf": {
        "acks": "all"
        "security.protocol": "SASL_SSL"
        "sasl.mechanism": "OAUTHBEARER"
        "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      }
      "partitionKey": ""
      "headers": []
    }

    "incomplete": {
      "type": "Kafka"
      # we need all the fields to exist to have defaults
      "topicName": ""
      "bootstrapServers": ""
      "producerConf": {
        "acks": "all"
        "security.protocol": "SASL_SSL"
        "sasl.mechanism": "OAUTHBEARER"
        "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      }
      "partitionKey": ""
      "headers": []
    }
  }

  "concurrency" : {
    "enrich": 256
    "sink": 8
  }

  "remoteAdapters" : {
    "connectionTimeout": 10 seconds,
    "readTimeout": 45 seconds,
    "maxConnections": 10,
    "configs" : []
  }

  "monitoring": {
    "metrics": {
      "cloudwatch": true
    }
  }

  "telemetry": {
    "disable": false
    "interval": 15 minutes
    "method": POST
    "collectorUri": collector-g.snowplowanalytics.com
    "collectorPort": 443
    "secure": true
  }

  "featureFlags" : {
    "acceptInvalid": false
    "legacyEnrichmentOrder": false
    "tryBase64Decoding": false
  }

  "blobStorage": {
    "gcs": false
    "s3": false
  }
}
